//프로젝트 생성
// => 사전 준비물 : Java 11 설치 , IDE: IntelliJ 또는 Eclipse 설치
// => 스프링 부트 스타터 사이트로 이동해서 스프링 프로젝트 생성 : https://start.spring.io
// => 프로젝트 선택 : Project: Gradle - Groovy Project >> Spring Boot: 2.3.x >> Language: Java >> Packaging: Jar >> Java: 11 Project Metadata >> groupId: hello >> artifactId: core >> Dependencies: 선택하지 않는다.
//주의 - 스프링 부트 3.0을 선택하게 되면 다음 부분 꼭 확인 - https://bit.ly/springboot3 참고
// => Java 17 이상 사용, javax 패키지 이름을 jakarta로 변경해야함
// => 오라클과 자바 라이센스 문제로 모든 javax 패키지를 jakarta로 변경하기로 했음
// => 패키지 이름 변경의 예) javax.persistence.Entity->jakarta.persistence.Entity(JPA 애노테이션) ,  javax.annotation.PostConstruct -> jakarta.annotation.PostConstruct(@PostConstruct 애노테이션), javax.validation -> jakarta.validation(검증 애노테이션)
//동작 확인
// => 기본 메인 클래스 실행( CoreApplication.main() )
//IntelliJ : Gradle 대신에 자바가 직접 실행하도록 설정
// => 최근 IntelliJ 버전은 Gradle을 통해서 실행 하는 것이 기본 설정이다. 이렇게 하면 실행속도가 느리다. 다음과 같이 변경하면 자바로 바로 실행해서 실행속도가 더 빠르다
// => Preferences >>Build, Execution, Deployment >> Build Tools >> Gradle >> [Build and run using: Gradle 에서 IntelliJ IDEA로] & [Run tests using: Gradle 에서 IntelliJ IDEA로]

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
