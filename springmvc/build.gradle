// 스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술 - 4
//6. 스프링 MVC - 기본 기능 - springmvc
// => 프로젝트 생성, 로깅 간단히 알아보기, 요청 매핑
// => 요청 매핑, API 예시
// => HTTP 요청(기본, 헤더 조회) HTTP 요청 파라미터(쿼리 파라미터, HTML Form ,@RequestParam, @ModelAttribute)
// => HTTP 요청 메시지(단순 텍스트, JSON), HTTP 응답(정적 리소스, 뷰 템플릿,HTTP API, 메시지 바디에 직접 입력)
// =>  HTTP 메시지 컨버터, 요청 매핑 헨들러 어뎁터 구조

//프로젝트 생성
// => 스프링 부트 스타터 사이트로 이동해서 스프링 프로젝트 생성 : https://start.spring.io
//프로젝트 선택
// => Project: Gradle Project >> Language: Java >> Spring Boot: 2.4.x >> Project Metadata - Group: hello >> Artifact: springmvc >> Name: springmvc >> Package name: hello.springmvc >> Packaging: Jar (주의!) Java: 11 >> Dependencies: Spring Web, Thymeleaf, Lombok
// => 주의! Packaging는 War가 아니라 Jar를 선택해주세요. JSP를 사용하지 않기 때문에 Jar를 사용하는 것이 좋습니다. 앞으로 스프링 부트를 사용하면 이 방식을 주로 사용하게 됩니다.
// => Jar를 사용하면 항상 내장 서버(톰캣등)를 사용하고, webapp 경로도 사용하지 않습니다. 내장 서버 사용에 최적화 되어 있는 기능입니다. 최근에는 주로 이 방식을 사용합니다.
// => War를 사용하면 내장 서버도 사용가능 하지만, 주로 외부 서버에 배포하는 목적으로 사용합니다.

//동작 확인
// => 기본 메인 클래스 실행( SpringmvcApplication.main() )
// => http://localhost:8080 호출해서 Whitelabel Error Page가 나오면 정상 동작

//Welcome 페이지 만들기
// => 이번 장에서 학습할 내용을 편리하게 참고하기 위해 Welcome 페이지를 만들자.
// => 스프링 부트에 Jar 를 사용하면 /resources/static/ 위치에 index.html 파일을 두면 Welcome 페이지로 처리해준다.
// => 스프링 부트가 지원하는 정적 컨텐츠 위치에 /index.html 이 있으면 된다.

// 스프링 부트 Welcome 페이지 지원 참고 사이트
// => : https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-welcome-page

plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}
